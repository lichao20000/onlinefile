<?php
/*
 * 机构和用户管理 @author wangbo 20140403
*/
class ProxyEscloudappEscloud_organduserws extends AgentProxyAbstract {
	const SERVICE_NAME = "escloud_userws";
	const ORGSERVICENAME = "escloud_orgws";
	const ROLESERVICE_NAME = "escloud_rolews";
	/**
	 * 删除用户
	 */
	public function deleteUserList($data) {
		$url = "deleteUserByid";
		return $this->post ( self::SERVICE_NAME, $url, $data, "application/json;charset=UTF-8" );
	}
	/**
	 * 添加用户
	 */
	public function addUser($userInfo) {
		$url = "addUser";
		return $this->post ( self::SERVICE_NAME, $url, $userInfo, "application/json;charset=UTF-8" );
	}
	/**
	 * 修改用户
	 */
	public function updateUser($userInfo) {
		$url = "modifyUser";
		return $this->post ( self::SERVICE_NAME, $url, $userInfo, "application/json;charset=UTF-8" );
	}
	/**
	 * 根据机构的id获取该机构下的所有用户
	 */
	public function findUserListByOrgid($canshu) {
		$url = "findUserListByOrgid";
		return $this->post ( self::SERVICE_NAME, $url, $canshu, "application/json;charset=UTF-8" );
	}
	/**
	 * 获取左侧的机构树
	 */
	public function getOrgListTree($canshu) {
		$url = "findOrgListByParentid";
		return $this->post ( self::ORGSERVICENAME, $url, $canshu, "application/json;charset=UTF-8" );
	}
	/**
	 * 在以机构为条件的前提下获取用户的总记录数
	 */
	public function getCountAll($countCanshu) {
		$url = "getCount";
		return $this->post ( self::SERVICE_NAME, $url, $countCanshu, "application/json;charset=UTF-8" );
	}
	/**
	 * 在以机构为条件的前提下获取用户的总记录数
	 */
	public function getCountAllForSearch($countCanshu) {
		$url = "getCountAllForSearch";
		return $this->post ( self::SERVICE_NAME, $url, $countCanshu, "application/json;charset=UTF-8" );
	}

	/**
	 * 添加机构
	 */
	public function addOrg($orgInfor) {
		$url = "addOrgEntity";
		return $this->post ( self::ORGSERVICENAME, $url, $orgInfor, "application/json;charset=UTF-8" );
	}
	/**
	 * 删除机构以及子机构，以及这些机构下的用户
	 */
	public function deleteOrgEntry($canshu) {
		$url = "deleteOrgEntry";
		return $this->post ( self::ORGSERVICENAME, $url, $canshu, "application/json;charset=UTF-8" );
	}

	/**
	 * 编辑机构
	 */
	public function modifyOrgEntry($data) {
		$url = "modifyOrgEntry";
		return $this->post ( self::ORGSERVICENAME, $url, $data, "application/json;charset=UTF-8" );
	}

	/**
	 * 获取所有角色信息
	 */
	public function getAllRoleServer($canshu) {
		$url = "getDataList";
		return $this->post ( self::ROLESERVICE_NAME, $url, $canshu, "application/json;charset=UTF-8" );
	}
	/**
	 * 获取角色总记录数
	 */
	public function getCountAllRole($canshu) {
		$url = "getCount";
		return $this->post ( self::ROLESERVICE_NAME, $url, $canshu, "application/json;charset=UTF-8" );
	}
	/**
	 * 获取用户选择的角色列表
	 */
	public function getUserRole($canshu) {
		$url = "getUserRole";
		return $this->post ( self::ROLESERVICE_NAME, $url, $canshu, "application/json;charset=UTF-8" );
	}
	public function getRolesByUserId($userId) {
		$url = "getRolesByUserId";
		return $this->post ( self::SERVICE_NAME, $url, $userId, "text/plain;charset=UTF-8" );
	}

	/**
	 * 添加角色
	 * wanghongchen 20140620
	 */
	public function saveUserRole($param){
		return $this->post ( self::SERVICE_NAME, "saveUserRole", $param, "application/json;charset=UTF-8" );
	}
	/**
	 * 删除用户角色
	 * wanghongchen 20140620
	 */
	public function deleteUserRole($param){
		return $this->post ( self::SERVICE_NAME, "deleteUserRole", $param, "application/json;charset=UTF-8" );
	}

	/**
	 * 批量授权
	 * wanghongchen 20140620
	 */
	public function batchSaveUserRole($param){
		return $this->post ( self::SERVICE_NAME, "batchSaveUserRole", $param, "application/json;charset=UTF-8" );
	}
	/**
	 * 获取没有机构的用户
	 * wanghongchen 20140620
	 */
	public function findNoOrgUserList($param){
		return $this->post ( self::SERVICE_NAME, "findNoOrgUserList", $param, "application/json;charset=UTF-8" );
	}

	/**
	 * 为机构添加用户
	 * wanghongchen 20140621
	 */
	public function addUsersForOrg($param){
		return $this->post ( self::SERVICE_NAME, "addUsersForOrg", $param, "application/json;charset=UTF-8" );
	}
	/**
	 *
	 * guolanrui 20140621
	 */
	public function findUserListAndOrgName($param){
		return $this->post ( self::SERVICE_NAME, "findUserListAndOrgName", $param, "application/json;charset=UTF-8" );
	}

	/**
	 * 获取所有机构列表
	 */
	public function getAllOrgList($postData) {
		$url = "getAllOrgList";
		return $this->post(self::ORGSERVICENAME, $url,$postData,"application/json;charset=UTF-8");
	}
	/**
	 * 判断某机构是否有用户
	 *
	 * xuekun  added in  2014-7-25 
	 * @param unknown_type $orgseq
	 */
	public  function judgeIfHaveUser($orgseq){
		$urlparam=array($orgseq);
		array_unshift($urlparam, 'judgeIfHaveUser');
		$url=implode('/', $urlparam);
		return $this->get(self::ORGSERVICENAME, $url);
	}
	
	public function resetPassword($postData){
		$url = "resetPassword";
		return $this->post(self::SERVICE_NAME, $url,$postData,"application/json;charset=UTF-8");
	}
	public function modifyPassword($postData){
		$url = "modifyPassword";
		return $this->post(self::SERVICE_NAME, $url,$postData,"application/json;charset=UTF-8");
	}
	public function getUserByUserid($curuserId){
		$urlparam=array('getUserByUserid', $curuserId);
		$url=implode('/', $urlparam);
		return $this->get(self::SERVICE_NAME, $url);
	}
	
	/**
	 * 根据userId获取头像的地址
	 * wanghongchen 20140930
	 */
	public function getIconByUserId($param) {
		return $this->post(self::SERVICE_NAME, "getIconByUserId",$param,"application/json;charset=UTF-8");
	}
	public function saveHeaderImageId($param) {
		return $this->post(self::SERVICE_NAME, "saveHeaderImageId",$param,"application/json;charset=UTF-8");
	}
	public function getIconById($id) {
		$urlparam=array('getIconById', $id);
		$url=implode('/', $urlparam);
		return $this->get(self::SERVICE_NAME, $url);
	}
	
	public function setOrgForNew($param){
		$url = "setOrgForNew";
		return $this->post ( self::SERVICE_NAME, $url, $param, "application/json;charset=UTF-8" );
	}
}