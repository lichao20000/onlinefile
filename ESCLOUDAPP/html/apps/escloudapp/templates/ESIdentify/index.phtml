<link href="<?php echo $tplPath?>/ESIdentify/css/main.css" rel="stylesheet" type="text/css">
<link href="<?php echo $tplPath;?>/public/DatePicker/skin/WdatePicker.css" rel="stylesheet" type="text/css">
<link rel="stylesheet" type="text/css" href="<?php echo $tplPath;?>/ESIdentify/js/autovalidate/style.css" />
<link rel="stylesheet" type="text/css" href="<?php echo $tplPath;?>/ESIdentify/css/viewfile.css" />
<script type="text/javascript" src="<?php echo $tplPath;?>/public/DatePicker/WdatePicker.js"></script>
<script type="text/javascript" >var status=<?php echo $status;?>;var itemPath='';</script>
<script type="text/javascript" src="<?php echo $tplPath;?>/ESIdentify/js/menu.js"></script>
<script type="text/javascript" src="<?php echo $tplPath;?>/ESIdentify/js/common.js"></script>
<script type="text/javascript" src="<?php echo $tplPath;?>/ESTemplate/js/jumpwindow.js"></script>
<script type="text/javascript" src="<?php echo $tplPath;?>/ESIdentify/js/autovalidate/validate.js"></script>
<link rel="stylesheet" href="<?php echo $tplPath;?>/public/SWFUpload/css/swfupload.css" type="text/css"/>
<script type="text/javascript" src="<?php echo $tplPath;?>/public/SWFUpload/js/swfupload.js"></script>
<script type="text/javascript" src="<?php echo $tplPath;?>/public/SWFUpload/js/swfupload.queue.js"></script>
<script type="text/javascript" src="<?php echo $tplPath;?>/public/SWFUpload/js/fileprogress.js"></script>
<script type="text/javascript" src="<?php echo $tplPath;?>/public/SWFUpload/js/handlers.js"></script>
<script type="text/javascript" src="<?php echo $tplPath;?>/ESFormStart/js/formStartHandle.js"></script>
<script type="text/javascript" src="<?php echo $tplPath;?>/ESFormStart/js/addAttachData.js"></script>

<?php echo $app->draw('nav',array('esaction'=>$esaction, 'app'=>$app));?>
<?php 

	if($status==4){
		$expand=2;
	}else{
		$expand=1;
	}
echo $app->draw('appmenu',array('esaction'=>$esaction, 'app'=>$app, 'expand'=>$expand));?>
<script type="text/javascript">
$(document).ready(function(){
	$("#estabs").esTabs("open", {title:"<?php echo $business;?>", content:"#esmenu, #esone, #eslist"});
	$(".esleft").css("height",esleftH);//设置左侧菜单
	
});

</script>
<?php 
$userinfo = $esaction->exec("getProxy", "user")->getUserInfo($esaction->getUser()->getId());
$companyCode = strtoupper($userinfo->mainSite);
$appinfo = $app->getAppInfo();
//$uploadUrl = $esaction->exec("getProxy", "filestoreservice")->findbestfileuploadurl($companyCode)->fileStoreServiceAddr."storenewfile/".$appinfo["appid"]."/".$appinfo["apptoken"]."/".$companyCode."/true";
// $uploadUrl='http://localhost';
?>
<input type="hidden" id="condition">
<div  class='esmain'>
	<div id="escontent">
			<div id="esmenu" class="esleft">
				<ul id="treeDemo" class="ztree" treenodeid=''></ul>
			</div>
			<div class="esright" id ="esone">
					<div id="eslist">
					  <table id = "null"></table>
			       </div>
			</div>
			<div id="esfileview"></div>
			<div id="esnotfiling"></div>
	</div>
	<div id="transfer"></div>
</div>

<script type="text/javascript">

var winW=$(window).width();
var width='auto';
if($.browser.msie && $.browser.version==='6.0'){
	width=winW-$(".esleft").width()-5;
}
var height='';
var winH=$(window).height();
var eslefttop=$(".esleft").offset().top;
var esleftH=winH-eslefttop-11;
var height=winH-eslefttop-115;
window.onresize=function()
{
	var winW=$(window).width();
	if($.browser.msie && $.browser.version==='6.0'){
		width=winW-$(".esleft").width()-5;
	}
	var winH=$(window).height();
	var height=winH-eslefttop-115;
	$(".flexigrid").css({width:width});	
}
</script>
<script type="text/javascript">
$("#null").flexigrid({
		url: false,
		dataType: 'json',
		colModel : [
			{display: '序号', name : 'num', width : 20, align: 'center'}, 
			{display: '<input type="checkbox" name="paths">', name : 'ids', width : 20, align: 'center'},
			{display: '操作', name : 'operate', width : 60, align: 'center'}
			
			],
	
		buttons : [
<?php if($status==1){
	echo "
			{name: '添加', bclass: 'add',disable:true},
			{name: '删除', bclass: 'delete',disable:true},
			{name: '筛选', bclass: 'filter',disable:true},
			{name: '文件移交', bclass: 'transfer',disable:true},
			{name:'批量修改',bclass:'batchmodify',disable:true},
			{name: '更多操作&nbsp;&nbsp;&nbsp;&nbsp;', bclass: 'more',id:'do_more',disable:true}";
}elseif ($status==2 || $status==6 || $status==7){
	echo "	{name: '退回', bclass: 'back',disable:true},
				{name: '生成档号', bclass: 'code',disable:true},
				{name: '撤件', bclass: 'delcode',disable:true},
				{name: '装盒', bclass: 'do_store',disable:true},
				{name: '移入档案库', bclass: 'store',disable:true},
				{name: '更多操作&nbsp;&nbsp;&nbsp;&nbsp;', bclass: 'more',id:'do_more',disable:true}";
}elseif ($status==3){
	echo "
		{name: '装盒上架', bclass: 'do_store',disable:true},
		{name: '入库确认', bclass: 'confirm',disable:true},
		{name: '更多操作&nbsp;&nbsp;&nbsp;&nbsp;', bclass: 'more',id:'do_more',disable:true}";
}elseif($status==100){
	echo "
	{name: '数据恢复', bclass: 'add',disable:true},
	{name: '删除', bclass: 'delete',disable:true},
	{name: '清空', bclass: 'grid_data_batch_delete',disable:true},
	{name: '筛选', bclass: 'filter',disable:true},
	{name: '查看日志', bclass: 'note',disable:true}";
}else{
	echo "{name: '添加', bclass: 'add',disable:true},
	{name: '删除', bclass: 'delete',disable:true},
				{name: '导入', bclass: 'import',disable:true},
				{name: '导出', bclass: 'export',disable:true},
				{name: '盒列表', bclass: 'do_store',disable:true},
				{name: '更多操作&nbsp;&nbsp;&nbsp;&nbsp;', bclass: 'more',id:'do_more',disable:true}";
}?>
			],
			usepager: true,
			title: '&nbsp;',
			useRp: true,
			width: width,
			height:height
	});
function createNewSWFUpload(){
	var upload = new SWFUpload({
		//提交路径
		upload_url: "<?php echo $serviceIp;?>/importData/",
		//向后台传递额外的参数
		//提交到服务器的参数信息，这样就添加了一个param参数，值是uploadParams在服务器端用request.getParameter(“param”)就可以拿到值
		//上传文件的名称
		file_post_name: "file.txt",
		
		file_size_limit : "20480",	// 100MB
		file_types : "*.xlsx;*.xls;*.xml",
		file_types_description : "所有文件",
		file_upload_limit : "1",
		file_queue_limit : "0",
		post_params:{path:nodePath,userid:"<?php echo $userid;?>"},

		// 事件处理
		swfupload_loaded_handler : swfuploadLoaded,
		file_dialog_start_handler : fileDialogStart,
		file_queued_handler : fileQueued,
		file_queue_error_handler : fileQueueError,
		file_dialog_complete_handler : fileDialogComplete,
		upload_start_handler : uploadStart,
		upload_progress_handler : uploadProgress,
		upload_error_handler : uploadError,
		upload_success_handler : uploadSuccess,
		upload_complete_handler : uploadComplete,

		// 按钮的处理
		button_image_url : "<?php echo $tplPath?>/public/SWFUpload/img/ButtonUpload72.png",
		button_placeholder_id : "btnUpload",
		button_width: 72,
		button_height: 28,
		
		// Flash文件地址设置
		flash_url : "<?php echo $tplPath?>/public/SWFUpload/js/swfupload.swf",
		
		custom_settings : {
			progressTarget : "fsUploadProgress",
			cancelButtonId : "btnCancel",
			startButtonId : "btnStart",
			// 上传成功的回调函数
			uploadSuccess : function(file, data){
				if(data){
					if(data=="false"){
						$.dialog.notice({width: 150,content: '导入数据失败',icon: 'error',time: 3});
					}else{
						setGroup();
						$.dialog.notice({width: 150,content: '成功导入'+data+'条数据',icon: 'success',time: 3});
						$("#flexme,#innerfile").flexReload();
						$.dialog.list['importDialog'].close();
					}
				}
			}
		},
		
		// Debug 设置
		debug: false
	});
	$("#btnCancel").click(function(){cancelQueue(upload);});
	$("#btnStart").click(function(){startQueue(upload);});
};
//$("body").die().live("click", onBodyDown);
</script>
<!-- 编辑页面文件操作方法-->
<script type="text/javascript">
//liqiubo 20140729 加入检索框
$(document).keydown(function(event){
	if(event.keyCode == 13 && document.activeElement.id == 'dataQueryFile') {
		addFileSearch();
	}
});
function addFileSearch(){
	var keyword = $.trim($('#dataQueryFile').val());
	if(keyword == '' || keyword=='请输入关键字' ) {
		keyword = '';
		return ;
	}
	var nodeid = $("#dataQueryFile").attr("nodeId");
	if(nodeid == ''){
		return;
	}
	var query = {};
	query['keyword'] = keyword;
	query['folderid'] = nodeid;
	$("#filelist").flexOptions({url:$.appClient.generateUrl({ESEFile:'getFileListForNoLink'}),query:query}).flexReload();
	//$("#filelist").flexOptions({newp:1,query:query}).flexReload();
}
	//挂接文件
	function addFile(){
		$.ajax({
		    url:$.appClient.generateUrl({ESIdentify:'hookFiles'},'x'),
		    async:false,
		    success:function(data){
				var linkdialog = $.dialog({
					title:'挂接文件',
		    		width: 800,
		    	   	height: 'auto',
		    	   	padding: '0px',
		    	    fixed:true,
		    	    resize: false,
		    		content:data,
		    		cancelVal: '关闭',
		    		cancel: true,
		    		okVal: '挂接文件',
		    		ok: function(){
		    			var files = [];
		    			var checkboxs = $("#filelist").find("input[name='id']:checked");
		    			if (checkboxs.length > 0 ){
		    				var thisDialog=this;
		    				checkboxs.each(function(){
		    					var tr = $(this).closest("tr");
		    					var selectFile = tr.prop("data").cell;
		    					var file = {};
		    					file.ORIGINAL_ID = selectFile.originalId;
		    					file.EssType = selectFile.essType==null?"":selectFile.essType;
		    					file.ESTYPE = selectFile.estype==null?"":selectFile.estype;//liqiubo 20140729 修复bug90
		    					file.ESFILETYPE=$("#addFileSelect").val();
		    					//手动挂接
		    					files.push(file);
		    				});
		    				$.post($.appClient.generateUrl({ESIdentify:'linkFiles'},'x'), {path:file_Path, IdBusiModel:status, files:files, upload:false}, function(data){
		    					$("#efiletable").flexReload();
		    					//liqiubo 20140804 挂接后刷新页面
		    					if($('#flexme')){
		    						var prepath = $('#flexme input[id="prepath"]').val();
									var selectTr = $('#flexme input[id="selectTr"]').val();
		    						$('#flexme').flexOptions({query:'',onSuccess:function(){
		    							//xiewenda 20141017 获取选中的和最后点击的的保存的路径值   在挂机刷新后显示原来的状态
										var f = true;
										if(prepath){
											$('#innerfile').flexOptions({onSuccess:function(){
												if(f){
													var trArr = selectTr.split(",");
													for(var i=0; i<trArr.length;i++){
														$('#flexme tr').find('input[value="'+trArr[i]+'"]').attr("checked","checked");
													}
													//alert(prepath);
												$('#flexme tr').find('input[value="'+prepath+'"]').parent().parent().parent().trigger('click');
												$('#flexme tr').find('input[value="'+prepath+'"]').attr("checked","checked");
												 f=false;
												}
											}}).flexReload();
										}else{$('#innerfile').flexReload();}
		    						}}).flexReload();
		    					}
		    					
		    					$.dialog.notice({content:'挂接成功！',time:3,icon:"succeed"});
		    					thisDialog.close();
		    					return;
		    				});
		    			}

			    		}
		    	});
		    }
		});
	
	};

	// 挂接文件
	function linkFile(){
		var files = [];
		var checkboxs = $("#filelist").find("input[name='id']:checked");
		if (checkboxs.length > 0 ){
			var thisDialog=this;
			checkboxs.each(function(){
				var tr = $(this).closest("tr");
				var selectFile = tr.prop("data").cell;
				var file = {};
				file.ORIGINAL_ID = selectFile.originalId;
				file.EssType = selectFile.essType==null?"":selectFile.essType;
				file.ESTYPE = selectFile.estype==null?"":selectFile.estype;//liqiubo 20140729 修复bug90
				file.ESFILETYPE=$("#addFileSelect").val();
				files.push(file);
			});
			$.post($.appClient.generateUrl({ESIdentify:'linkFiles'},'x'), {path:file_Path, IdBusiModel:status, files:files, upload:false}, function(data){
				$("#efiletable").flexReload();
				//liqiubo 20140804 挂接后刷新页面
				if($('#flexme')){
					$('#flexme').flexOptions({query:''}).flexReload();
				}
				$.dialog.notice({content:'挂接成功！',time:3,icon:"succeed"});
				thisDialog.close();
				return;
			});
		}
	};
	
	// 去除挂接文件
	function delFile(){
		var checkboxs = $("#efiletable").find("input[name='id']:checked");
		if(checkboxs.length==0){
			$.dialog.notice({content:'请选择删除的文件',time:3,icon:'warning'});
			return;
		}
		$.dialog({
			content:'确定要删除吗?',
			ok:true,
			okVal:'确定',
			cancel:true,
			cancelVal:'取消',
			ok:function(){
				if(checkboxs.length > 0){
					var ids = [];
					checkboxs.each(function(){
						ids.push($(this).closest("tr").attr("id").substr(3));
					});
					
					$.post($.appClient.generateUrl({ESIdentify:'deleteLinkFiles'},'x'), {path:file_Path, ids:ids}, function(data){
						if(data){
							$("#efiletable").flexReload();
							//xiewenda 20141017 获取选中的和最后点击的的保存的路径值   在删除刷数据后显示原来的状态
    						var prepath = $('#flexme input[id="prepath"]').val();
							var selectTr = $('#flexme input[id="selectTr"]').val();
							$("#flexme").flexOptions({onSuccess:function(){
								var f = true;
								if(prepath){
									$('#innerfile').flexOptions({onSuccess:function(){
										if(f){
											var trArr = selectTr.split(",");
											for(var i=0; i<trArr.length;i++){
												$('#flexme tr').find('input[value="'+trArr[i]+'"]').attr("checked","checked");
											}
										$('#flexme tr').find('input[value="'+prepath+'"]').parent().parent().parent().trigger('click');
										$('#flexme tr').find('input[value="'+prepath+'"]').attr("checked","checked");
										 f=false;
										}
									}}).flexReload();
								}else{$('#innerfile').flexReload();}
							}}).flexReload();//liqiubo 20140529 成功后也刷新下大表格中的数据，避免已经成功删除挂接文件，因为没有刷新数据，导致不显示挂接图标
							//全部删除则执行下列代码
							var obj=$('input[metadata="Attachments"]');
							if(checkboxs.length >= parseInt(obj.val())){
								obj.val(0);
							}
						}
						
					});
				}

			}
		})
	
	};
	//在删除操作和添加电子文件时动态修改附件数
	function _initInput(){
		var trlen=$("#efiletable").find('tr').length;
			$('input[metadata="Attachments"]').val(trlen);
	}
	// 保存修改后的挂接文件信息
	function saveFile(){
		var trs = $("#efiletable").find("tr[datastate='modify']");
		if(trs.length > 0){
			var files = [];
			trs.each(function(){
				var td = $(this).find("td[colname='essType']").text();
				var file = {};
				file.ORIGINAL_ID = $(this).prop("id").substr(3);
				file.EssType = $(this).find("td[colname='essType']").text();
				file.Dept = $(this).find("td[colname='dept']").text();;
				files.push(file);
			});
			$.post($.appClient.generateUrl({ESIdentify:'modifyLinkFiles'},'x'), {path:file_Path, files:files}, function(data){
				if(data){
					$.dialog.notice({content:'保存成功',time:2,icon:'success'});
					$("#efiletable").flexReload();
				}
			});
		}
	};
	// 浏览电子文件
	function viewFile(){

		if(!nodePath){
			$.dialog.notice({content: 'PATH不存在', time: 2, icon: 'warning', lock: false});
		}
		// 方吉祥修改（在浏览原文时用户勾选数据时选择用户勾选的第一条）
		var fileId = '';
		var fileRead = 'false' ;
		var fileDown = 'false' ;
		var filePrint = 'false' ;
			if(document.getElementById('efiletable')){
					if(!$('#efiletable tr').length){
						$.dialog.notice({content: '不存在电子文件', time: 3, icon: 'warning', lock: false});
						return;

					}
				var checked = $('#efiletable input[name="id"]:checked:first').closest('tr');
					if(checked.length){
						fileRead = $('#efiletable input[name="id"]:checked:first').attr('fileRead');
						if(fileRead == "false"){
							$.dialog.notice({content: '您对选择的数据没有文件浏览权限，不能进行此操作！', time: 5, icon: 'warning', lock: false});
							return ;
						}
						fileDown = $('#efiletable input[name="id"]:checked:first').attr('fileDown');
						filePrint = $('#efiletable input[name="id"]:checked:first').attr('filePrint');
						fileId = checked[0].id.split('row');
						fileId = fileId[1];
						
					}else{ // 默认第一条数据
						var rowCount = $('#efiletable tr').length ;
						for(var r=0;r<rowCount;r++){
							fileRead = $('input[name="id"]', $('#efiletable tr')[r]).attr('fileRead');
							if(fileRead == "true"){
								fileDown = $('input[name="id"]', $('#efiletable tr')[r]).attr('fileDown');
								filePrint = $('input[name="id"]', $('#efiletable tr')[r]).attr('filePrint');
								fileId = $('#efiletable tr')[r].id.split('row');
								fileId = fileId[1];
								break ;
							}
						}
						if('' == fileId){
							$.dialog.notice({content: '您对当前数据下的所有原文都没有文件浏览权限，不能进行此操作！', time: 5, icon: 'warning', lock: false});
							return ;
						}
						
					}
			}
			
		if(document.getElementById('efiletable')){
			/// ----------
			var url = $.appClient.generateUrl({ESIdentify:'file_view',path:file_Path, fileId: fileId},'x');
			// 修改结束
			$.ajax({
				url:url,
				cache:false,
				success:function(data){

					if(data === 'pathErr'){
						$.dialog.notice({content: '参数不正确（PATH）', time: 2, icon: 'warning', lock: false});
					}
					$.dialog({
				    	title:'浏览电子文件',
				    	width: '960px',
			    	   	fixed:false,
			    	    resize: false,
			    	    padding: 0,
			    	    top: '10px',
				    	content:data
				    });
				}
			});
		} else {
			$.ajax({
				url:$.appClient.generateUrl({ESIdentify:'isHasFileReadRight',path:file_Path},'x'),
				cache:false,
				success:function(isHas){
					if(isHas === 'false'){
						$.dialog.notice({content: '您对当前数据下的所有原文都没有文件浏览权限，不能进行此操作！', time: 5, icon: 'warning', lock: false});
						return ;
					}
					var url = $.appClient.generateUrl({ESIdentify:'file_view',path:file_Path, fileId: fileId},'x');
					$.ajax({
						url:url,
						cache:false,
						success:function(data){

							if(data === 'pathErr'){
								$.dialog.notice({content: '参数不正确（PATH）', time: 2, icon: 'warning', lock: false});
							}
							$.dialog({
						    	title:'浏览电子文件',
						    	width: '960px',
					    	   	fixed:false,
					    	    resize: false,
					    	    padding: 0,
					    	    top: '10px',
						    	content:data
						    });
						}
					});
				}
			});
		}
	};
	// 上传文件
	function uploadFile(){
		$.dialog({
			title:'上传文件',
    		width: '450px',
    	   	height: '250px',
    	    fixed:true,
    	    resize: false,
    		content:"&nbsp;附件类型:&nbsp;<select id='uploadFileSelect'><option value='正文'>正文</option><option value='附件'>附件</option><option value='处理单'>处理单</option></select><div id='content'><div class='fieldset flash' id='fsUploadProgress'></div></div>",
    		cancelVal: '关闭',
    		cancel: true,
    		padding: '10px',
			button: [
	    		{id:'btnAdd', name: '添加文件'},
	            {id:'btnCancel', name: '删除所有', disabled: true},
	            {id:'btnStart', name: '开始上传', disabled: true, callback: function(){return false;}}
			],
			init:createSWFUpload
    	});	 
	};
	// 创建上传文件组件
	function createSWFUpload(){
		var files = [];
		var upload = new SWFUpload({
			//提交路径
			upload_url: "",
			//upload_url: "http://127.0.0.1:8080/fileStoreMainServer/rest/mainFileServer/getUploadUrl",
			//upload_url: "http://127.0.0.1:8080/fileStoreServer/rest/fileServer/uploadFiles/4/c073f100d2cb1031b11dbcaec5dfa81e",
			file_post_name: "file.txt",		
			file_size_limit : "1048576",	// 100MB  longjunhao 20140822 修改为1024MB=1GB
			file_types : "*.*",
			file_types_description : "所有文件",
			file_upload_limit : "0",
			file_queue_limit : "0",

			// 事件处理
			swfupload_loaded_handler : swfuploadLoaded,
			file_dialog_start_handler : fileDialogStart,
			file_queued_handler : fileQueued,
			file_queue_error_handler : fileQueueError,
			file_dialog_complete_handler : fileDialogComplete,
			upload_start_handler : uploadStart,
			upload_progress_handler : uploadProgress,
			upload_error_handler : uploadError,
			upload_success_handler : uploadSuccess,
			upload_complete_handler : uploadComplete,

			// 按钮的处理
			button_image_url : "<?php echo $tplPath?>/public/SWFUpload/img/ButtonUpload72.png",
			button_placeholder_id : "btnAdd",
			button_width: 72,
			button_height: 28,
			
			// Flash文件地址设置
			flash_url : "<?php echo $tplPath?>/public/SWFUpload/js/swfupload.swf",
			
			custom_settings : {
				progressTarget : "fsUploadProgress",
				cancelButtonId : "btnCancel",
				startButtonId : "btnStart",
				// 上传成功的回调函数
				uploadSuccess : function(file, data, remainder){
					var f = $.parseJSON(data);
					var extName = file.name.substr(file.name.lastIndexOf(".")+1);
					extendFile(f.fileId, f.contentMD5, f.fileSize, f.createTime, file.name, extName, remainder);
				}
			},
			
			// Debug 设置
			debug: false
		});
		$("#btnCancel").click(function(){cancelQueue(upload);});
		$("#btnStart").click(function(){
			$.post($.appClient.generateUrl({ESIdentify:'getUploadURL'},'x'),  function(data){
				upload.setUploadURL(data);
				startQueue(upload);
			});
		});
		// 挂接文件 (上传会调用，故linktotal给值1)
		function extendFile(fileid, md5, filesize, createtime, filename, extName, remainder){
			files.push({LINKTOTAL:1,ORIGINAL_ID:fileid, ESMD5:md5, ESTITLE:filename, ESTYPE:extName, ESSIZE:filesize, EsCreateTime:createtime,ESFILETYPE:$("#uploadFileSelect").val()});
			if(remainder ===0){
				$.post($.appClient.generateUrl({ESIdentify:'linkFiles'},'x'), {path:file_Path, IdBusiModel:status, files:files, upload:true}, function(data){
					files=[];
					if($("#efiletable")){
						$("#efiletable").flexReload();
					}
					if($('#flexme')){
						//xiewenda 20141017获取选中的和最后点击的的保存的路径值   在挂机刷新后显示原来的状态
						var prepath = $('#flexme input[id="prepath"]').val();
						var selectTr = $('#flexme input[id="selectTr"]').val();
						$('#flexme').flexOptions({onSuccess:function(){
							var f = true;
							if(prepath){
								$('#innerfile').flexOptions({onSuccess:function(){
									if(f){
										var trArr = selectTr.split(",");
										for(var i=0; i<trArr.length;i++){
											$('#flexme tr').find('input[value="'+trArr[i]+'"]').attr("checked","checked");
										}
									$('#flexme tr').find('input[value="'+prepath+'"]').parent().parent().parent().trigger('click');
									$('#flexme tr').find('input[value="'+prepath+'"]').attr("checked","checked");
									 f=false;
									}
								}}).flexReload();
							}else{$('#innerfile').flexReload();}
						}}).flexReload();
						
					}
				 	/*if($("#innerfile")){
						$("#innerfile").flexReload();
					}
					if($('#flexme')){
						$('#flexme').flexReload();//liqiubo 20140529 成功后也刷新下大表格中的数据，避免已经成功挂接，因为没有刷新数据，导致不显示挂接图标
					} */
					
				});
			}
		};
	};

	// 初始化选择文件界面
	function initSelectFile(){
		createFolderTree();
		createFileList();
	}
	// 创建树目录
	function createFolderTree(){
		var url = $.appClient.generateUrl({ESEFile:'access'},'x');
		var setting = {
			async: {
				enable: true,
				dataType: 'json',
				url: url,
				autoParam: ["id=param"]
			},	
			data: {
				key: {
					name: 'estitle',
					children: 'isPid'
				},
				simpleData: {
					enable: true,
					idKey: 'id',
					pIdKey: 'parentid',
					rootPId: 0
				}
			},
			callback: {
				beforeClick: beforeClick,
				onClick : nodeClick
			}
		};
		$.fn.zTree.init($("#filetree"), setting);
		var efileTree = $.fn.zTree.getZTreeObj("filetree");
		function beforeClick(treeId, node) {
			if (node.isParent) {
				efileTree.expandNode(node);
			}
		};
		function nodeClick(event, treeId, node){
			$("#dataQueryFile").attr("nodeId",node.id);
			var query={};
			query['folderid'] = node.id;
			
			$("#filelist").flexOptions({url: $.appClient.generateUrl({ESEFile:'getFileListForNoLink'},'x'),query:query}).flexReload();
		};
	};

	// 创建文件列表
	function createFileList(){
		$("#filelist").flexigrid({
			url: $.appClient.generateUrl({ESEFile:'getFileListForNoLink'}, 'x'),
			query:{'folderid':0},
			dataType: 'json',
			editable: true,
			colModel : [
				{display: '<input type="checkbox" id="fileSelectAll">', name : 'ids', width : 40, align: 'center'},
				{display: '文件名', name: 'estitle', width:230},
				{display: '创建时间', name: 'createTime', width:230},
				{display: '文件大小', name: 'essize'},
				{display: '文件验证', name: 'esmd5'}
			],
			usepager: true,
			rp: 50,
			useRp: true,
			width: 600,
			height: 275
		});
		$("#fileSelectAll").die("click").live("click", function(){
			document.title = this.checked;
			$("#filelist").find("input[name='id']").attr("checked", this.checked);
		});
	}

	// 上传 检查是否设置扫描规则 longjunhao 20140725 add
	function checkScanPolicy4UploadFile() {
		$.post($.appClient.generateUrl({ESIdentify:'checkFileScanPolicy'},'x'), 
				{path:file_Path, IdBusiModel:status}, function(data){
			var json = eval("("+data+")");
			if (json.success && json.success == 'false') {
				$.dialog.notice({content: '未设置扫描规则，请您先设置扫描规则再进行上传操作！', time: 2, icon: 'warning'});
			} else {
				uploadFile();
			}
		});
	}

	// 添加 检查是否设置扫描规则 longjunhao 20140725 add
	function checkScanPolicy4AddFile() {
		$.post($.appClient.generateUrl({ESIdentify:'checkFileScanPolicy'},'x'), 
				{path:file_Path, IdBusiModel:status}, function(data){
			var json = eval("("+data+")");
			if (json.success && json.success == 'false') {
				$.dialog.notice({content: '未设置扫描规则，请您先设置扫描规则再进行添加操作！', time: 2, icon: 'warning'});
			} else {
				addFile();
			}
		});
	}
	// 添加 检查是否设置组合字段规则 shiyangtao 20140822 add
	function checkcombinationFiled() {
		
		$.post($.appClient.generateUrl({ESIdentify:'checkCombinationFiled'},'x'), 
				{moid:status,strucid:strucid}, function(data){
			var json = eval("("+data+")");
			if (json.success&&json.success =='false') {
				$.dialog.notice({content: '未设置组合字段规则，请您先设置组合字段规则再进行操作！', time: 2, icon: 'warning'});
			} else {
				combinationfield(json.stau);//liqiubo 20140904 把从哪个规则获取的值传下去，修复bug885
			}
		});
	}


</script>